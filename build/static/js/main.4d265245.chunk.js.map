{"version":3,"sources":["serviceWorker.js","withRoot.js","components/Track/SearchTracks.js","components/Shared/AudioPlayer.js","components/Track/LikeTrack.js","components/Track/DeleteTrack.js","components/Shared/Error.js","components/Track/UpdateTrack.js","components/Track/TrackList.js","components/Track/CreateTrack.js","components/Shared/Loading.js","pages/App.js","pages/Profile.js","components/Auth/Signout.js","components/Shared/Header.js","Root.js","components/Auth/Login.js","components/Auth/Register.js","components/Auth/index.js","index.js"],"names":["Boolean","window","location","hostname","match","theme","createMuiTheme","palette","primary","light","main","dark","secondary","typography","useNextVariants","withRoot","Component","props","react_default","a","createElement","core_styles","CssBaseline_default","SEARCH_TRACKS_QUERY","gql","_templateObject","withStyles","root","padding","margin","spacing","unit","display","alignItems","_ref","classes","setSearchResults","_useState","useState","_useState2","Object","slicedToArray","search","setSearch","inputEl","useRef","clearSearchInput","current","focus","handleSubmit","_ref2","asyncToGenerator","regenerator_default","mark","_callee","event","client","res","wrap","_context","prev","next","preventDefault","query","variables","sent","data","tracks","stop","_x","_x2","apply","this","arguments","react_apollo_esm","onSubmit","Paper_default","className","elevate","IconButton_default","onClick","Clear_default","TextField_default","fullWidth","placeholder","InputProps","disableUnderline","onChange","target","value","inputRef","type","Search_default","AudioPlayer","url","ReactPlayer_default","height","width","controls","CREATE_LIKE_MUTATION","LikeTrack_templateObject","iconButton","color","icon","marginLeft","trackId","likeCount","currentUser","useContext","UserContext","mutation","onCompleted","console","log","refetchQueries","GET_ME_QUERY","createLike","stopPropagation","disabled","likeSet","findIndex","track","id","ThumbUp_default","DELETE_TRACK_MUTATION","DeleteTrack_templateObject","DeleteTrack","postedBy","update","cache","deleteTrack","readQuery","GET_TRACKS_QUERY","index","Number","concat","toConsumableArray","slice","writeQuery","DeleteForeverOutlined_default","snackbar","error","open","setOpen","Snackbar_default","message","action","Button_default","size","UPDATE_TRACK_MUTATION","UpdateTrack_templateObject","container","flexWrap","dialog","maxWidth","textField","cancel","save","button","input","_useState3","title","_useState4","setTitle","_useState5","description","_useState6","setDescription","_useState7","_useState8","file","setFile","_useState9","_useState10","submitting","setSubmitting","_useState11","_useState12","fileError","setFileError","isCurrentUser","handleAudioChange","selectedFile","files","name","handleAudioUpload","FormData","append","axios","post","abrupt","t0","_ref3","_callee2","updateTrack","uploadedUrl","_context2","Fragment","Edit_default","_ref4","loading","Shared_Error","Dialog_default","DialogTitle_default","DialogContent_default","DialogContentText_default","FormControl_default","label","multiline","rows","required","accept","htmlFor","variant","component","LibraryMusic_default","FormHelperText_default","DialogActions_default","trim","CircularProgress_default","details","link","textDecoration","&:hover","List_default","map","ExpansionPanel_default","key","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","ListItem_default","Track_LikeTrack","likes","length","ListItemText_default","primaryTypographyProps","Link","to","username","Shared_AudioPlayer","ExpansionPanelDetails_default","Typography_default","ExpansionPanelActions_default","Track_UpdateTrack","Track_DeleteTrack","CREATE_TRACK_MUTATION","CreateTrack_templateObject","fab","position","bottom","right","zIndex","createTrack","Add_default","_ref5","textAlign","progress","App_templateObject","searchResults","Track_SearchTracks","Track_CreateTrack","Shared_Loading","Track_TrackList","PROFILE_QUERY","Profile_templateObject","paper","defineProperty","marginRight","marginTop","marginBottom","breakpoints","up","card","justifyContent","audioIcon","fontSize","thumbIcon","divider","params","Card_default","CardHeader_default","avatar","Avatar_default","user","subheader","format","dateJoined","elevation","AudiotrackTwoTone_default","trackSet","Divider_default","ThumbUpTwoTone_default","cursor","buttonIcon","localStorage","removeItem","writeData","isLoggedIn","handleSignout","buttonText","ExitToApp_default","flexGrow","grow","logo","faceIcon","AppBar_default","Toolbar_default","RadioTwoTone_default","noWrap","FaceTwoTone_default","Auth_Signout","React","createContext","Root_templateObject","fetchPolicy","me","BrowserRouter","Provider","Shared_Header","Switch","Route","exact","path","App","Profile","LOGIN_MUTATION","Login_templateObject","flexDirection","backgroundColor","form","submit","setNewUser","setUsername","password","setPassword","tokenAuth","setItem","token","_x3","Lock_default","called","InputLabel_default","Input_default","Transition","Slide_default","assign","direction","REGISTER_MUTATION","Register_templateObject","openTitle","verticalAlign","email","setEmail","Gavel_default","createUser","disableBackdropClick","TransitionComponent","VerifiedUserTwoTone_default","newUser","Auth_Register","Auth_Login","ApolloClient","uri","fetchOptions","credentials","request","operation","getItem","setContext","headers","Authorization","clientState","defaults","IS_LOGGED_IN_QUERY","src_templateObject","ReactDOM","render","src_Root","Auth","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4d265245.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\n\r\n// A theme with custom primary and secondary color.\r\n// It's optional.\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#5b5b5b\",\r\n      main: \"#333\",\r\n      dark: \"#232323\",\r\n    },\r\n    secondary: {\r\n      light: \"#6fbf73\",\r\n      main: \"#4caf50\",\r\n      dark: \"#357a38\",\r\n    },\r\n  },\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n});\r\n\r\nfunction withRoot(Component) {\r\n  function WithRoot(props) {\r\n    // MuiThemeProvider makes the theme available down the React tree\r\n    // thanks to React context.\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n        {/* https://material-ui.com/getting-started/usage/#cssbaseline */}\r\n        <CssBaseline />\r\n        <Component {...props} />\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n\r\n  return WithRoot;\r\n}\r\n\r\nexport default withRoot;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { ApolloConsumer } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\n\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst SearchTracks = ({ classes, setSearchResults }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const inputEl = useRef();\r\n\r\n  const clearSearchInput = () => {\r\n    setSearchResults([]);\r\n    setSearch(\"\");\r\n    inputEl.current.focus();\r\n  };\r\n\r\n  const handleSubmit = async (event, client) => {\r\n    event.preventDefault();\r\n    const res = await client.query({\r\n      query: SEARCH_TRACKS_QUERY,\r\n      variables: { search },\r\n    });\r\n    setSearchResults(res.data.tracks);\r\n  };\r\n\r\n  return (\r\n    <ApolloConsumer>\r\n      {(client) => (\r\n        <form onSubmit={(event) => handleSubmit(event, client)}>\r\n          <Paper className={classes.root} elevate={1}>\r\n            {/* Clear button */}\r\n            <IconButton onClick={clearSearchInput}>\r\n              <ClearIcon />\r\n            </IconButton>\r\n            {/* Search field  */}\r\n            <TextField\r\n              fullWidth\r\n              placeholder=\"Search All Tracks\"\r\n              InputProps={{\r\n                disableUnderline: true,\r\n              }}\r\n              onChange={(event) => setSearch(event.target.value)}\r\n              value={search}\r\n              inputRef={inputEl}\r\n            />\r\n            {/* Search Button */}\r\n            <IconButton type=\"submit\">\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </Paper>\r\n        </form>\r\n      )}\r\n    </ApolloConsumer>\r\n  );\r\n};\r\n\r\nconst SEARCH_TRACKS_QUERY = gql`\r\n  query($search: String) {\r\n    tracks(search: $search) {\r\n      id\r\n      title\r\n      description\r\n      url\r\n      likes {\r\n        id\r\n      }\r\n      postedBy {\r\n        id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    margin: theme.spacing.unit,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(SearchTracks);\r\n","import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\n\r\nconst AudioPlayer = ({ url }) => (\r\n  <div>\r\n    <ReactPlayer url={url} height=\"30px\" width=\"500px\" controls={true} />\r\n  </div>\r\n);\r\n\r\nexport default AudioPlayer;\r\n","import React, { useContext } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\r\n\r\nimport { UserContext, GET_ME_QUERY } from \"../../Root\";\r\n\r\nconst LikeTrack = ({ classes, trackId, likeCount }) => {\r\n  const currentUser = useContext(UserContext);\r\n\r\n  const handleDisableLikedTrack = () => {\r\n    const userLikes = currentUser.likeSet;\r\n    const isTrackLiked =\r\n      userLikes.findIndex(({ track }) => track.id === trackId) > -1;\r\n    return isTrackLiked;\r\n  };\r\n\r\n  return (\r\n    <Mutation\r\n      mutation={CREATE_LIKE_MUTATION}\r\n      variables={{ trackId }}\r\n      onCompleted={(data) => {\r\n        console.log({ data });\r\n      }}\r\n      refetchQueries={() => [{ query: GET_ME_QUERY }]}\r\n    >\r\n      {(createLike) => (\r\n        <IconButton\r\n          onClick={(event) => {\r\n            event.stopPropagation();\r\n            createLike();\r\n          }}\r\n          className={classes.iconButton}\r\n          disabled={handleDisableLikedTrack()}\r\n        >\r\n          {likeCount}\r\n          <ThumbUpIcon className={classes.icon} />\r\n        </IconButton>\r\n      )}\r\n    </Mutation>\r\n  );\r\n};\r\n\r\nconst CREATE_LIKE_MUTATION = gql`\r\n  mutation($trackId: Int!) {\r\n    createLike(trackId: $trackId) {\r\n      track {\r\n        id\r\n        likes {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = (theme) => ({\r\n  iconButton: {\r\n    color: \"#00e676\",\r\n  },\r\n  icon: {\r\n    marginLeft: theme.spacing.unit / 2,\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(LikeTrack);\r\n","import React, { useContext } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\n\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TrashIcon from \"@material-ui/icons/DeleteForeverOutlined\";\r\n\r\nimport { UserContext } from \"../../Root\";\r\nimport { GET_TRACKS_QUERY } from \"../../pages/App\";\r\n\r\nconst DeleteTrack = ({ track }) => {\r\n  const currentUser = useContext(UserContext);\r\n  const isCurrentUser = currentUser.id === track.postedBy.id;\r\n\r\n  const handleUpdateCache = (cache, { data: { deleteTrack } }) => {\r\n    const data = cache.readQuery({ query: GET_TRACKS_QUERY });\r\n    const index = data.tracks.findIndex(\r\n      (track) => Number(track.id) === deleteTrack.trackId\r\n    );\r\n    // data.tracks.splice(index, 1);\r\n    const tracks = [\r\n      ...data.tracks.slice(0, index),\r\n      ...data.tracks.slice(index + 1),\r\n    ];\r\n    cache.writeQuery({ query: GET_TRACKS_QUERY, data: { tracks } });\r\n  };\r\n\r\n  return (\r\n    isCurrentUser && (\r\n      <Mutation\r\n        mutation={DELETE_TRACK_MUTATION}\r\n        variables={{ trackId: track.id }}\r\n        onCompleted={(data) => {\r\n          console.log({ data });\r\n        }}\r\n        update={handleUpdateCache}\r\n        // refetchQueries={() => [{ query: GET_TRACKS_QUERY }]}\r\n      >\r\n        {(deleteTrack) => (\r\n          <IconButton onClick={deleteTrack}>\r\n            <TrashIcon />\r\n          </IconButton>\r\n        )}\r\n      </Mutation>\r\n    )\r\n  );\r\n};\r\n\r\nconst DELETE_TRACK_MUTATION = gql`\r\n  mutation($trackId: Int!) {\r\n    deleteTrack(trackId: $trackId) {\r\n      trackId\r\n    }\r\n  }\r\n`;\r\n\r\nexport default DeleteTrack;\r\n","import React, { useState } from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\n\r\nconst Error = ({ classes, error }) => {\r\n  const [open, setOpen] = useState(true);\r\n\r\n  return (\r\n    <Snackbar\r\n      open={open}\r\n      className={classes.snackbar}\r\n      message={error.message}\r\n      action={\r\n        <Button onClick={() => setOpen(false)} color=\"secondary\" size=\"small\">\r\n          Close\r\n        </Button>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst styles = (theme) => ({\r\n  snackbar: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(Error);\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport axios from \"axios\";\r\n\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\n\r\nimport { UserContext } from \"../../Root\";\r\nimport Error from \"../Shared/Error\";\r\n\r\nconst UpdateTrack = ({ classes, track }) => {\r\n  const currentUser = useContext(UserContext);\r\n\r\n  const [open, setOpen] = useState(false);\r\n  const [title, setTitle] = useState(track.title);\r\n  const [description, setDescription] = useState(track.description);\r\n  const [file, setFile] = useState(\"\");\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [fileError, setFileError] = useState(\"\");\r\n  console.log({ currentUser });\r\n  const isCurrentUser = currentUser.id === track.postedBy.id;\r\n\r\n  const handleAudioChange = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n    const fileSizeLimit = 10000000; //10 million bytes - 10mb\r\n    if (selectedFile && selectedFile.size > fileSizeLimit) {\r\n      setFileError(`${selectedFile.name}: File size is too large!`);\r\n    } else {\r\n      setFile(selectedFile);\r\n      setFileError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleAudioUpload = async () => {\r\n    try {\r\n      // Metadata for Cloudinary request:\r\n      const data = new FormData();\r\n      data.append(\"file\", file);\r\n      data.append(\"resource_type\", \"raw\");\r\n      data.append(\"upload_preset\", \"react-python-tracks\");\r\n      data.append(\"cloud_name\", \"digensvyy\");\r\n      // Request:\r\n      const res = await axios.post(\r\n        \"https://api.cloudinary.com/v1_1/digensvyy/raw/upload\",\r\n        data\r\n      );\r\n      return res.data.url;\r\n    } catch (err) {\r\n      console.error(\"Error uploading file!\", err);\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event, updateTrack) => {\r\n    event.preventDefault();\r\n    setSubmitting(true);\r\n    // upload the audio file and get returned url from API\r\n    const uploadedUrl = await handleAudioUpload();\r\n    updateTrack({\r\n      variables: { trackId: track.id, title, description, url: uploadedUrl },\r\n    });\r\n  };\r\n\r\n  return (\r\n    isCurrentUser && (\r\n      <>\r\n        {/* Update Track Button with Pencil/Edit Icon*/}\r\n        <IconButton onClick={() => setOpen(true)}>\r\n          <EditIcon />\r\n        </IconButton>\r\n\r\n        {/* Update Track Dialog */}\r\n        <Mutation\r\n          mutation={UPDATE_TRACK_MUTATION}\r\n          onCompleted={(data) => {\r\n            setSubmitting(false);\r\n            setOpen(false);\r\n            setTitle(\"\");\r\n            setDescription(\"\");\r\n            setFile(\"\");\r\n          }}\r\n          // refetchQueries={() => [{ query: GET_TRACKS_QUERY }]}\r\n        >\r\n          {(updateTrack, { loading, error }) => {\r\n            if (error) return <Error error={error} />;\r\n\r\n            return (\r\n              <Dialog open={open} className={classes.dialog}>\r\n                <form onSubmit={(event) => handleSubmit(event, updateTrack)}>\r\n                  <DialogTitle>Update Track</DialogTitle>\r\n                  <DialogContent>\r\n                    <DialogContentText>\r\n                      Add a Title, Description & Audio File (Must be under 10MB)\r\n                    </DialogContentText>\r\n                    <FormControl fullWidth>\r\n                      <TextField\r\n                        label=\"Title\"\r\n                        placeholder=\"Add Title\"\r\n                        onChange={(event) => setTitle(event.target.value)}\r\n                        value={title}\r\n                        className={classes.textField}\r\n                      />\r\n                    </FormControl>\r\n                    <FormControl fullWidth>\r\n                      <TextField\r\n                        multiline\r\n                        rows=\"2\"\r\n                        label=\"Description\"\r\n                        onChange={(event) => setDescription(event.target.value)}\r\n                        value={description}\r\n                        placeholder=\"Add Description\"\r\n                        className={classes.textField}\r\n                      />\r\n                    </FormControl>\r\n\r\n                    {/* Input handling  */}\r\n                    <FormControl error={Boolean(fileError)}>\r\n                      <input\r\n                        id=\"audio\"\r\n                        required={true}\r\n                        type=\"file\"\r\n                        accept=\"audio/mp3,audio/wav\"\r\n                        className={classes.input}\r\n                        onChange={handleAudioChange}\r\n                      />\r\n\r\n                      {/* Add Audio File Button */}\r\n                      <label htmlFor=\"audio\">\r\n                        <Button\r\n                          variant=\"outlined\"\r\n                          color={file ? \"secondary\" : \"inherit\"}\r\n                          component=\"span\"\r\n                          className={classes.button}\r\n                        >\r\n                          Audio File\r\n                          <LibraryMusicIcon className={classes.icon} />\r\n                        </Button>\r\n\r\n                        {/* Text to display the uploaded file name */}\r\n                        {file && file.name}\r\n                      </label>\r\n                      <FormHelperText>{fileError}</FormHelperText>\r\n                    </FormControl>\r\n                  </DialogContent>\r\n                  <DialogActions>\r\n                    <Button\r\n                      disabled={submitting}\r\n                      onClick={() => setOpen(false)}\r\n                      className={classes.cancel}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      disabled={\r\n                        submitting ||\r\n                        !title.trim() ||\r\n                        !description.trim() ||\r\n                        !file\r\n                      }\r\n                      type=\"submit\"\r\n                      className={classes.save}\r\n                    >\r\n                      {submitting ? (\r\n                        <CircularProgress className={classes.save} size={24} />\r\n                      ) : (\r\n                        \"Update Track\"\r\n                      )}\r\n                    </Button>\r\n                  </DialogActions>\r\n                </form>\r\n              </Dialog>\r\n            );\r\n          }}\r\n        </Mutation>\r\n      </>\r\n    )\r\n  );\r\n};\r\n\r\nconst UPDATE_TRACK_MUTATION = gql`\r\n  mutation($trackId: Int!, $title: String, $url: String, $description: String) {\r\n    updateTrack(\r\n      trackId: $trackId\r\n      title: $title\r\n      url: $url\r\n      description: $description\r\n    ) {\r\n      track {\r\n        id\r\n        title\r\n        description\r\n        url\r\n        likes {\r\n          id\r\n        }\r\n        postedBy {\r\n          id\r\n          username\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = (theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  dialog: {\r\n    margin: \"0 auto\",\r\n    maxWidth: 550,\r\n  },\r\n  textField: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  cancel: {\r\n    color: \"red\",\r\n  },\r\n  save: {\r\n    color: \"green\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit * 2,\r\n  },\r\n  icon: {\r\n    marginLeft: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(UpdateTrack);\r\n","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\r\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\r\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\r\nimport ExpansionPanelActions from \"@material-ui/core/ExpansionPanelActions\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport AudioPlayer from \"../Shared/AudioPlayer\";\r\nimport LikeTrack from \"./LikeTrack\";\r\nimport DeleteTrack from \"./DeleteTrack\";\r\nimport UpdateTrack from \"./UpdateTrack\";\r\n\r\nconst TrackList = ({ classes, tracks }) => (\r\n  <List>\r\n    {tracks.map((track) => (\r\n      <ExpansionPanel key={track.id}>\r\n        <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\r\n          <ListItem className={classes.root}>\r\n            <LikeTrack trackId={track.id} likeCount={track.likes.length} />\r\n            <ListItemText\r\n              primaryTypographyProps={{\r\n                variant: \"subheading\",\r\n                color: \"primary\",\r\n              }}\r\n              primary={track.title}\r\n              secondary={\r\n                <Link\r\n                  className={classes.link}\r\n                  to={`/profile/${track.postedBy.id}`}\r\n                >\r\n                  {track.postedBy.username}\r\n                </Link>\r\n              }\r\n            />\r\n            <AudioPlayer url={track.url} />\r\n          </ListItem>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails className={classes.details}>\r\n          <Typography variant=\"body1\">{track.description}</Typography>\r\n        </ExpansionPanelDetails>\r\n        <ExpansionPanelActions>\r\n          <UpdateTrack track={track} />\r\n          <DeleteTrack track={track} />\r\n        </ExpansionPanelActions>\r\n      </ExpansionPanel>\r\n    ))}\r\n  </List>\r\n);\r\n\r\nconst styles = {\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  details: {\r\n    alignItems: \"center\",\r\n  },\r\n  link: {\r\n    color: \"#424242\",\r\n    textDecoration: \"none\",\r\n    \"&:hover\": {\r\n      color: \"black\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default withStyles(styles)(TrackList);\r\n","import React, { useState } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport axios from \"axios\";\r\n\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\n\r\nimport { GET_TRACKS_QUERY } from \"../../pages/App\";\r\nimport Error from \"../Shared/Error\";\r\n\r\nconst CreateTrack = ({ classes }) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [file, setFile] = useState(\"\");\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const [fileError, setFileError] = useState(\"\");\r\n\r\n  const handleAudioChange = (event) => {\r\n    const selectedFile = event.target.files[0];\r\n    const fileSizeLimit = 10000000; //10 million bytes - 10mb\r\n    if (selectedFile && selectedFile.size > fileSizeLimit) {\r\n      setFileError(`${selectedFile.name}: File size is too large!`);\r\n    } else {\r\n      setFile(selectedFile);\r\n      setFileError(\"\");\r\n    }\r\n  };\r\n\r\n  const handleAudioUpload = async () => {\r\n    try {\r\n      // Metadata for Cloudinary request:\r\n      const data = new FormData();\r\n      data.append(\"file\", file);\r\n      data.append(\"resource_type\", \"raw\");\r\n      data.append(\"upload_preset\", \"react-python-tracks\");\r\n      data.append(\"cloud_name\", \"digensvyy\");\r\n      // Request:\r\n      const res = await axios.post(\r\n        \"https://api.cloudinary.com/v1_1/digensvyy/raw/upload\",\r\n        data\r\n      );\r\n      return res.data.url;\r\n    } catch (err) {\r\n      console.error(\"Error uploading file!\", err);\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleUpdateCache = (cache, { data: { createTrack } }) => {\r\n    const data = cache.readQuery({ query: GET_TRACKS_QUERY });\r\n    const tracks = data.tracks.concat(createTrack.track);\r\n    cache.writeQuery({ query: GET_TRACKS_QUERY, data: { tracks } });\r\n  };\r\n\r\n  const handleSubmit = async (event, createTrack) => {\r\n    event.preventDefault();\r\n    setSubmitting(true);\r\n    // upload the audio file and get returned url from API\r\n    const uploadedUrl = await handleAudioUpload();\r\n    createTrack({ variables: { title, description, url: uploadedUrl } });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Create Track Button */}\r\n      <Button\r\n        onClick={() => setOpen(true)}\r\n        variant=\"fab\"\r\n        className={classes.fab}\r\n        color=\"secondary\"\r\n      >\r\n        {open ? <ClearIcon /> : <AddIcon />}\r\n      </Button>\r\n\r\n      {/* Create Track Dialog */}\r\n      <Mutation\r\n        mutation={CREATE_TRACK_MUTATION}\r\n        onCompleted={(data) => {\r\n          setSubmitting(false);\r\n          setOpen(false);\r\n          setTitle(\"\");\r\n          setDescription(\"\");\r\n          setFile(\"\");\r\n        }}\r\n        update={handleUpdateCache}\r\n        // refetchQueries={() => [{ query: GET_TRACKS_QUERY }]}\r\n      >\r\n        {(createTrack, { loading, error }) => {\r\n          if (error) return <Error error={error} />;\r\n\r\n          return (\r\n            <Dialog open={open} className={classes.dialog}>\r\n              <form onSubmit={(event) => handleSubmit(event, createTrack)}>\r\n                <DialogTitle>Create Track</DialogTitle>\r\n                <DialogContent>\r\n                  <DialogContentText>\r\n                    Add a Title, Description & Audio File (Must be under 10MB)\r\n                  </DialogContentText>\r\n                  <FormControl fullWidth>\r\n                    <TextField\r\n                      label=\"Title\"\r\n                      placeholder=\"Add Title\"\r\n                      onChange={(event) => setTitle(event.target.value)}\r\n                      value={title}\r\n                      className={classes.textField}\r\n                    />\r\n                  </FormControl>\r\n                  <FormControl fullWidth>\r\n                    <TextField\r\n                      multiline\r\n                      rows=\"2\"\r\n                      label=\"Description\"\r\n                      onChange={(event) => setDescription(event.target.value)}\r\n                      value={description}\r\n                      placeholder=\"Add Description\"\r\n                      className={classes.textField}\r\n                    />\r\n                  </FormControl>\r\n\r\n                  {/* Input handling  */}\r\n                  <FormControl error={Boolean(fileError)}>\r\n                    <input\r\n                      id=\"audio\"\r\n                      required={true}\r\n                      type=\"file\"\r\n                      accept=\"audio/mp3,audio/wav\"\r\n                      className={classes.input}\r\n                      onChange={handleAudioChange}\r\n                    />\r\n\r\n                    {/* Add Audio File Button */}\r\n                    <label htmlFor=\"audio\">\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        color={file ? \"secondary\" : \"inherit\"}\r\n                        component=\"span\"\r\n                        className={classes.button}\r\n                      >\r\n                        Audio File\r\n                        <LibraryMusicIcon className={classes.icon} />\r\n                      </Button>\r\n\r\n                      {/* Text to display the uploaded file name */}\r\n                      {file && file.name}\r\n                    </label>\r\n                    <FormHelperText>{fileError}</FormHelperText>\r\n                  </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                  <Button\r\n                    disabled={submitting}\r\n                    onClick={() => setOpen(false)}\r\n                    className={classes.cancel}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button\r\n                    disabled={\r\n                      submitting ||\r\n                      !title.trim() ||\r\n                      !description.trim() ||\r\n                      !file\r\n                    }\r\n                    type=\"submit\"\r\n                    className={classes.save}\r\n                  >\r\n                    {submitting ? (\r\n                      <CircularProgress className={classes.save} size={24} />\r\n                    ) : (\r\n                      \"Add Track\"\r\n                    )}\r\n                  </Button>\r\n                </DialogActions>\r\n              </form>\r\n            </Dialog>\r\n          );\r\n        }}\r\n      </Mutation>\r\n    </>\r\n  );\r\n};\r\n\r\nconst CREATE_TRACK_MUTATION = gql`\r\n  mutation($title: String!, $description: String!, $url: String!) {\r\n    createTrack(title: $title, description: $description, url: $url) {\r\n      track {\r\n        id\r\n        title\r\n        description\r\n        url\r\n        likes {\r\n          id\r\n        }\r\n        postedBy {\r\n          id\r\n          username\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = (theme) => ({\r\n  container: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  dialog: {\r\n    margin: \"0 auto\",\r\n    maxWidth: 550,\r\n  },\r\n  textField: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  cancel: {\r\n    color: \"red\",\r\n  },\r\n  save: {\r\n    color: \"green\",\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit * 2,\r\n  },\r\n  icon: {\r\n    marginLeft: theme.spacing.unit,\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n  fab: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing.unit * 2,\r\n    right: theme.spacing.unit * 2,\r\n    zIndex: \"200\",\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(CreateTrack);\r\n","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst Loading = ({ classes }) => (\r\n  <div className={classes.root}>\r\n    <CircularProgress className={classes.progress} />\r\n  </div>\r\n);\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"100vw\",\r\n    textAlign: \"center\",\r\n  },\r\n  progress: {\r\n    margin: theme.spacing.unit * 2,\r\n    color: theme.palette.secondary.dark,\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(Loading);\r\n","import React, { useState } from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nimport SearchTracks from \"../components/Track/SearchTracks\";\r\nimport TrackList from \"../components/Track/TrackList\";\r\nimport CreateTrack from \"../components/Track/CreateTrack\";\r\n\r\nimport Loading from \"../components/Shared/Loading\";\r\nimport Error from \"../components/Shared/Error\";\r\n\r\nconst App = ({ classes }) => {\r\n  const [searchResults, setSearchResults] = useState([]);\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.container}>\r\n        <SearchTracks setSearchResults={setSearchResults} />\r\n        <CreateTrack />\r\n        <Query query={GET_TRACKS_QUERY}>\r\n          {({ data, loading, error }) => {\r\n            if (loading) return <Loading />;\r\n            if (error) return <Error error={error} />;\r\n            const tracks = searchResults.length > 0 ? searchResults : data.tracks;\r\n\r\n            return <TrackList tracks={tracks} />;\r\n          }}\r\n        </Query>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const GET_TRACKS_QUERY = gql`\r\n  query getTracksQuery {\r\n    tracks {\r\n      id\r\n      title\r\n      description\r\n      url\r\n      likes {\r\n        id\r\n      }\r\n      postedBy {\r\n        id\r\n        username\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = (theme) => ({\r\n  container: {\r\n    margin: \"0 auto\",\r\n    maxWidth: 960,\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(App);\r\n","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUpTwoTone\";\r\nimport AudiotrackIcon from \"@material-ui/icons/AudiotrackTwoTone\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport format from \"date-fns/format\";\r\n\r\nimport Loading from \"../components/Shared/Loading\";\r\nimport Error from \"../components/Shared/Error\";\r\nimport AudioPlayer from \"../components/Shared/AudioPlayer\";\r\n\r\nconst Profile = ({ classes, match }) => {\r\n  const id = match.params.id;\r\n  return (\r\n    <Query query={PROFILE_QUERY} variables={{ id }}>\r\n      {({ data, loading, error }) => {\r\n        if (loading) return <Loading />;\r\n        if (error) return <Error error={error} />;\r\n\r\n        return (\r\n          <div>\r\n            {/* User Info Header Card */}\r\n            <Card className={classes.card}>\r\n              <CardHeader\r\n                avatar={<Avatar>{data.user.username[0]}</Avatar>}\r\n                title={data.user.username}\r\n                subheader={`Joined ${format(\r\n                  data.user.dateJoined,\r\n                  \"Do MMM, YYYY\"\r\n                )}`}\r\n              />\r\n            </Card>\r\n\r\n            {/* Created Tracks Section */}\r\n            <Paper elevation={1} className={classes.paper}>\r\n              <Typography variant=\"title\" className={classes.title}>\r\n                <AudiotrackIcon className={classes.audioIcon} />\r\n                Created Tracks\r\n              </Typography>\r\n              {/* To display the User's created Tracks and number of Likes using map */}\r\n              {data.user.trackSet.map((track) => (\r\n                <div key={track.id}>\r\n                  <Typography>\r\n                    {track.title} · {track.likes.length} Likes\r\n                  </Typography>\r\n                  <AudioPlayer url={track.url} />\r\n                  <Divider className={classes.divider} />\r\n                </div>\r\n              ))}\r\n            </Paper>\r\n\r\n            {/* User's Liked Tracks Section*/}\r\n            <Paper elevation={1} className={classes.paper}>\r\n              <Typography variant=\"title\" className={classes.title}>\r\n                <ThumbUpIcon className={classes.thumbIcon} />\r\n                Liked Tracks\r\n              </Typography>\r\n              {data.user.likeSet.map(({ track }) => (\r\n                <div key={track.id}>\r\n                  <Typography>\r\n                    {track.title} · {track.likes.length} Likes · Posted by:{\" \"}\r\n                    {track.postedBy.username}\r\n                  </Typography>\r\n                  <AudioPlayer url={track.url} />\r\n                  <Divider className={classes.divider} />\r\n                </div>\r\n              ))}\r\n            </Paper>\r\n          </div>\r\n        );\r\n      }}\r\n    </Query>\r\n  );\r\n};\r\n\r\nconst PROFILE_QUERY = gql`\r\n  query($id: Int!) {\r\n    user(id: $id) {\r\n      id\r\n      username\r\n      dateJoined\r\n      likeSet {\r\n        id\r\n        track {\r\n          id\r\n          title\r\n          url\r\n          likes {\r\n            id\r\n          }\r\n          postedBy {\r\n            id\r\n            username\r\n          }\r\n        }\r\n      }\r\n      trackSet {\r\n        id\r\n        title\r\n        url\r\n        likes {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = (theme) => ({\r\n  paper: {\r\n    width: \"auto\",\r\n    display: \"block\",\r\n    padding: theme.spacing.unit * 2,\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginBottom: theme.spacing.unit * 2,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 650,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  card: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  title: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n  audioIcon: {\r\n    color: \"purple\",\r\n    fontSize: 30,\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  thumbIcon: {\r\n    color: \"green\",\r\n    marginRight: theme.spacing.unit,\r\n  },\r\n  divider: {\r\n    marginTop: theme.spacing.unit,\r\n    marginBottom: theme.spacing.unit,\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(Profile);\r\n","import React from \"react\";\r\nimport { ApolloConsumer } from \"react-apollo\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport ExitToApp from \"@material-ui/icons/ExitToApp\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nconst Signout = ({ classes }) => {\r\n  const handleSignout = (client) => {\r\n    localStorage.removeItem(\"authToken\");\r\n    client.writeData({ data: { isLoggedIn: false } });\r\n    console.log(\"User successfully logged out\", client);\r\n  };\r\n\r\n  return (\r\n    <ApolloConsumer>\r\n      {(client) => (\r\n        <Button onClick={() => handleSignout(client)}>\r\n          <Typography\r\n            variant=\"body1\"\r\n            className={classes.buttonText}\r\n            color=\"secondary\"\r\n          >\r\n            SIGNOUT\r\n          </Typography>\r\n          <ExitToApp className={classes.buttonIcon} color=\"secondary\" />\r\n        </Button>\r\n      )}\r\n    </ApolloConsumer>\r\n  );\r\n};\r\n\r\nconst styles = {\r\n  root: {\r\n    cursor: \"pointer\",\r\n    display: \"flex\",\r\n  },\r\n  buttonIcon: {\r\n    marginLeft: \"5px\",\r\n  },\r\n};\r\n\r\nexport default withStyles(styles)(Signout);\r\n","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport RadioIcon from \"@material-ui/icons/RadioTwoTone\";\r\nimport FaceIcon from \"@material-ui/icons/FaceTwoTone\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport Signout from \"../Auth/Signout\";\r\n\r\nconst Header = ({ classes, currentUser }) => {\r\n  return (\r\n    <AppBar position=\"static\" className={classes.root}>\r\n      <Toolbar>\r\n        {/* Title / Logo */}\r\n        <Link to=\"/\" className={classes.grow}>\r\n          <RadioIcon className={classes.logo} color=\"secondary\" />\r\n          <Typography variant=\"headline\" color=\"secondary\" noWrap>\r\n            ReactTracks\r\n          </Typography>\r\n        </Link>\r\n\r\n        {/* Auth User Info */}\r\n        {currentUser && (\r\n          <Link to={`/profile/${currentUser.id}`} className={classes.grow}>\r\n            <FaceIcon className={classes.faceIcon} />\r\n            <Typography variant=\"headline\" className={classes.username} noWrap>\r\n              {currentUser.username}\r\n            </Typography>\r\n          </Link>\r\n        )}\r\n\r\n        {/* Signout Button */}\r\n        <Signout />\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    margin: 0,\r\n    padding: 0,\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    textDecoration: \"none\",\r\n  },\r\n  logo: {\r\n    marginRight: theme.spacing.unit,\r\n    fontSize: 45,\r\n  },\r\n  faceIcon: {\r\n    marginRight: theme.spacing.unit,\r\n    fontSize: 30,\r\n    color: \"white\",\r\n  },\r\n  username: {\r\n    color: \"white\",\r\n    fontSize: 30,\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(Header);\r\n","import React from \"react\";\r\nimport { Query } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport withRoot from \"./withRoot\";\r\nimport App from \"./pages/App\";\r\nimport Profile from \"./pages/Profile\";\r\nimport Header from \"./components/Shared/Header\";\r\nimport Loading from \"./components/Shared/Loading\";\r\nimport Error from \"./components/Shared/Error\";\r\n\r\nexport const UserContext = React.createContext();\r\n\r\nconst Root = () => (\r\n  <Query query={GET_ME_QUERY} fetchPolicy=\"cache-and-network\">\r\n    {({ data, loading, error }) => {\r\n      if (loading) return <Loading />;\r\n      if (error) return <Error error={error} />;\r\n      const currentUser = data.me;\r\n\r\n      return (\r\n        <Router>\r\n          <UserContext.Provider value={currentUser}>\r\n            <Header currentUser={currentUser} />\r\n            <Switch>\r\n              <Route exact path=\"/\" component={App} />\r\n              <Route path=\"/profile/:id\" component={Profile} />\r\n            </Switch>\r\n          </UserContext.Provider>\r\n        </Router>\r\n      );\r\n    }}\r\n  </Query>\r\n);\r\n\r\nexport const GET_ME_QUERY = gql`\r\n  {\r\n    me {\r\n      id\r\n      username\r\n      email\r\n      likeSet {\r\n        track {\r\n          id\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n// const GET_TRACKS_QUERY = gql`\r\n//   {\r\n//     tracks {\r\n//       id\r\n//       title\r\n//       description\r\n//       url\r\n//     }\r\n//   }\r\n// `;\r\n\r\nexport default withRoot(Root);\r\n","import React, { useState } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\n\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Lock from \"@material-ui/icons/Lock\";\r\n\r\nimport Error from \"../Shared/Error\";\r\n\r\nconst Login = ({ classes, setNewUser }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleSubmit = async (event, tokenAuth, client) => {\r\n    event.preventDefault();\r\n    const res = await tokenAuth();\r\n    localStorage.setItem(\"authToken\", res.data.tokenAuth.token);\r\n    client.writeData({ data: { isLoggedIn: true } });\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <Lock />\r\n        </Avatar>\r\n        <Typography variant=\"title\">Login as Existing User</Typography>\r\n\r\n        <Mutation mutation={LOGIN_MUTATION} variables={{ username, password }}>\r\n          {(tokenAuth, { loading, error, called, client }) => {\r\n            return (\r\n              <form\r\n                onSubmit={(event) => handleSubmit(event, tokenAuth, client)}\r\n                className={classes.form}\r\n              >\r\n                <FormControl margin=\"normal\" required fullWidth>\r\n                  <InputLabel htmlFor=\"username\">Username</InputLabel>\r\n                  <Input\r\n                    id=\"username\"\r\n                    onChange={(event) => setUsername(event.target.value)}\r\n                  />\r\n                </FormControl>\r\n                <FormControl margin=\"normal\" required fullWidth>\r\n                  <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                  <Input\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    onChange={(event) => setPassword(event.target.value)}\r\n                  />\r\n                </FormControl>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  disabled={loading || !username.trim() || !password.trim()}\r\n                  className={classes.submit}\r\n                >\r\n                  {loading ? \"Logging in...\" : \"Login\"}\r\n                </Button>\r\n                <Button\r\n                  onClick={() => setNewUser(true)}\r\n                  color=\"secondary\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                >\r\n                  New user? Register here\r\n                </Button>\r\n\r\n                {/* Error Handling */}\r\n                {error && <Error error={error} />}\r\n              </form>\r\n            );\r\n          }}\r\n        </Mutation>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst LOGIN_MUTATION = gql`\r\n  mutation($username: String!, $password: String!) {\r\n    tokenAuth(username: $username, password: $password) {\r\n      token\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"auto\",\r\n    display: \"block\",\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    color: theme.palette.secondary.main,\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.primary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(Login);\r\n","import React, { useState } from \"react\";\r\nimport { Mutation } from \"react-apollo\";\r\nimport { gql } from \"apollo-boost\";\r\n\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport Gavel from \"@material-ui/icons/Gavel\";\r\nimport VerifiedUserTwoTone from \"@material-ui/icons/VerifiedUserTwoTone\";\r\n\r\nimport Error from \"../Shared/Error\";\r\n\r\nfunction Transition(props) {\r\n  return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nconst Register = ({ classes, setNewUser }) => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleSubmit = (event, createUser) => {\r\n    event.preventDefault();\r\n    createUser();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <Gavel />\r\n        </Avatar>\r\n        <Typography variant=\"headline\">Register</Typography>\r\n\r\n        <Mutation\r\n          mutation={REGISTER_MUTATION}\r\n          variables={{ username, email, password }}\r\n          onCompleted={(data) => {\r\n            console.log({ data });\r\n            setOpen(true);\r\n          }}\r\n        >\r\n          {(createUser, { loading, error }) => {\r\n            return (\r\n              <form\r\n                onSubmit={(event) => handleSubmit(event, createUser)}\r\n                className={classes.form}\r\n              >\r\n                <FormControl margin=\"normal\" required fullWidth>\r\n                  <InputLabel htmlFor=\"username\">Username</InputLabel>\r\n                  <Input\r\n                    id=\"username\"\r\n                    onChange={(event) => setUsername(event.target.value)}\r\n                  />\r\n                </FormControl>\r\n                <FormControl margin=\"normal\" required fullWidth>\r\n                  <InputLabel htmlFor=\"email\">Email</InputLabel>\r\n                  <Input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    onChange={(event) => setEmail(event.target.value)}\r\n                  />\r\n                </FormControl>\r\n                <FormControl margin=\"normal\" required fullWidth>\r\n                  <InputLabel htmlFor=\"password\">Password</InputLabel>\r\n                  <Input\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    onChange={(event) => setPassword(event.target.value)}\r\n                  />\r\n                </FormControl>\r\n                <Button\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  disabled={\r\n                    loading ||\r\n                    !username.trim() ||\r\n                    !email.trim() ||\r\n                    !password.trim()\r\n                  }\r\n                  className={classes.submit}\r\n                >\r\n                  {loading ? \"Registering...\" : \"Register\"}\r\n                </Button>\r\n                <Button\r\n                  onClick={() => setNewUser(false)}\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  fullWidth\r\n                >\r\n                  Previous user? Log in here\r\n                </Button>\r\n\r\n                {/* Error Handling */}\r\n                {error && <Error error={error} />}\r\n              </form>\r\n            );\r\n          }}\r\n        </Mutation>\r\n      </Paper>\r\n\r\n      {/* Success Dialog */}\r\n      <Dialog\r\n        open={open}\r\n        disableBackdropClick={true}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <DialogTitle>\r\n          <VerifiedUserTwoTone className={classes.icon} />\r\n          New Account\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            User successfully created! Welcome, {username}!\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={() => setNewUser(false)}\r\n          >\r\n            Login\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst REGISTER_MUTATION = gql`\r\n  mutation($username: String!, $password: String!, $email: String!) {\r\n    createUser(email: $email, username: $username, password: $password) {\r\n      user {\r\n        username\r\n        email\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    width: \"auto\",\r\n    display: \"block\",\r\n    marginLeft: theme.spacing.unit * 3,\r\n    marginRight: theme.spacing.unit * 3,\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: 400,\r\n      marginLeft: \"auto\",\r\n      marginRight: \"auto\",\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing.unit * 8,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing.unit * 2,\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    color: theme.palette.openTitle,\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing.unit,\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit,\r\n  },\r\n  submit: {\r\n    marginTop: theme.spacing.unit * 2,\r\n    marginBottom: theme.spacing.unit * 2,\r\n  },\r\n  icon: {\r\n    padding: \"0px 2px 2px 0px\",\r\n    verticalAlign: \"middle\",\r\n    color: \"green\",\r\n  },\r\n});\r\n\r\nexport default withStyles(styles)(Register);\r\n","import React, { useState } from \"react\";\r\n\r\nimport withRoot from \"../../withRoot\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\n\r\nexport default withRoot(() => {\r\n  const [newUser, setNewUser] = useState(true);\r\n  return newUser ? (\r\n    <Register setNewUser={setNewUser} />\r\n  ) : (\r\n    <Login setNewUser={setNewUser} />\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { ApolloProvider, Query } from \"react-apollo\";\r\nimport ApolloClient, { gql } from \"apollo-boost\";\r\n\r\nimport Root from \"./Root\";\r\nimport Auth from \"./components/Auth\";\r\n\r\nconst client = new ApolloClient({\r\n  uri: \"http://127.0.0.1:8000/graphql/\",\r\n  fetchOptions: {\r\n    credentials: \"include\",\r\n  },\r\n  request: (operation) => {\r\n    const token = localStorage.getItem(\"authToken\") || \"\";\r\n    operation.setContext({\r\n      headers: {\r\n        Authorization: `JWT ${token}`,\r\n      },\r\n    });\r\n  },\r\n  clientState: {\r\n    defaults: {\r\n      isLoggedIn: !!localStorage.getItem(\"authToken\"),\r\n    },\r\n  },\r\n});\r\n\r\nconst IS_LOGGED_IN_QUERY = gql`\r\n  query {\r\n    isLoggedIn @client\r\n  }\r\n`;\r\n\r\nReactDOM.render(\r\n  <ApolloProvider client={client}>\r\n    <Query query={IS_LOGGED_IN_QUERY}>\r\n      {({ data }) => (data.isLoggedIn ? <Root /> : <Auth />)}\r\n    </Query>\r\n  </ApolloProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}